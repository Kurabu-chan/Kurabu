{
    "post": {
        "description": "Update the list status for an manga",
        "tags": [
            "List"
        ],
        "security": [{
            "bearerAuth": []
        }],
        "operationId": "updateMangaListItem",
        "parameters": [{
                "name": "mangaId",
                "description": "The id of the manga whose list status you want to update",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "2"
            },
            {
                "name": "comments",
                "description": "Just some comments",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "example": "we need more seasons"
            },
            {
                "name": "isRereading",
                "description": "Whether the manga is being reread right now",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "boolean"
                },
                "example": "true"
            },
            {
                "name": "numTimesReread",
                "description": "The amount of times reread",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer"
                },
                "example": "100"
            },
            {
                "name": "numVolumesRead",
                "description": "The amount of volumes read",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer"
                },
                "example": "24"
            },
            {
                "name": "numChaptersRead",
                "description": "The amount of chapters read",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer"
                },
                "example": "24"
            },
            {
                "name": "priority",
                "description": "The priority to give the manga",
                "in": "query",
                "required": false,
                "schema": {
                    "maximum": 2,
                    "minimum": 0,
                    "type": "integer"
                },
                "example": "1"
            },
            {
                "name": "rereadValue",
                "description": "No clue what this does, but we give it to MAL and it works",
                "in": "query",
                "required": false,
                "schema": {
                    "maximum": 5,
                    "minimum": 0,
                    "type": "integer"
                },
                "example": "5"
            },
            {
                "name": "score",
                "description": "The score to give to the manga",
                "in": "query",
                "required": false,
                "schema": {
                    "maximum": 10,
                    "minimum": 0,
                    "type": "integer"
                },
                "example": "5"
            },
            {
                "name": "state",
                "in": "query",
                "description": "The code used for authentication",
                "required": false,
                "deprecated": true,
                "example": "456c17be-29e9-4b38-afde-8e67110d0bcb",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            {
                "name": "status",
                "description": "The status to give the manga",
                "in": "query",
                "required": null,
                "schema": {
                    "type": "string",
                    "enum": [
                        "reading",
                        "completed",
                        "on_hold",
                        "dropped",
                        "plan_to_read"
                    ]
                },
                "example": "watching"
            },
            {
                "name": "tags",
                "description": "Some tags to add to the manga",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "example": "idk, what, this, even, is, used, for, tbh"
            }
        ],
        "responses": {
            "200": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "reading",
                                                "completed",
                                                "on_hold",
                                                "dropped",
                                                "plan_to_read"
                                            ]
                                        },
                                        "score": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 10
                                        },
                                        "num_volumes_read": {
                                            "type": "integer"
                                        },
                                        "num_chapters_read": {
                                            "type": "integer"
                                        },
                                        "is_rereading": {
                                            "type": "boolean"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "priority": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 2
                                        },
                                        "num_times_reread": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "reread_value": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 5
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "comments": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "success": {
                                    "type": "integer",
                                    "const": 0
                                }
                            }
                        }
                    }
                }
            },
            "403": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [{
                                    "$ref": "../../../errors/authenticationError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/missingStateError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/refreshError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/tokensNotPresentError.schema.json"
                                }
                            ]
                        },
                        "examples": {
                            "0": {
                                "$ref": "../../../errors/authenticationError.example.json"
                            },
                            "1": {
                                "$ref": "../../../errors/missingStateError.example.json"
                            },
                            "2": {
                                "$ref": "../../../errors/refreshError.example.json"
                            },
                            "3": {
                                "$ref": "../../../errors/tokensNotPresentError.example.json"
                            }
                        }
                    }
                }
            },
            "422": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [{
                                    "$ref": "../../../errors/malformedParameterError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/missingParameterError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/mistypedParameterError.schema.json"
                                }
                            ]
                        },
                        "examples": {
                            "0": {
                                "$ref": "../../../errors/malformedParameterError.example.json"
                            },
                            "1": {
                                "$ref": "../../../errors/missingParameterError.example.json"
                            },
                            "2": {
                                "$ref": "../../../errors/mistypedParameterError.example.json"
                            }
                        }
                    }
                }
            },
            "500": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [{
                                    "$ref": "../../../errors/mALConnectionError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/generalError.schema.json"
                                }
                            ]
                        },
                        "examples": {
                            "0": {
                                "$ref": "../../../errors/mALConnectionError.example.json"
                            },
                            "1": {
                                "$ref": "../../../errors/generalError.example.json"
                            }
                        }
                    }
                }
            }
        }
    },
    "delete": {
        "description": "Remove a manga from your list",
        "tags": [
            "List"
        ],
        "security": [{
            "bearerAuth": []
        }],
        "operationId": "deleteMangaListItem",
        "parameters": [{
                "name": "mangaid",
                "in": "query",
                "description": "The id of the manga you want to remove from your list",
                "required": true,
                "example": "0",
                "schema": {
                    "type": "integer"
                }
            },
            {
                "name": "state",
                "in": "query",
                "description": "The code used for authentication",
                "required": false,
                "deprecated": true,
                "example": "456c17be-29e9-4b38-afde-8e67110d0bcb",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        ],
        "responses": {
            "200": {
                "description": "The fact that it says success 0 does not mean it did not work, this is just the response from MAL",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "integer",
                                    "const": 0
                                }
                            }
                        }
                    }
                }
            },
            "404": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [{
                                "$ref": "../../../errors/mALMediaNotFound.schema.json"
                            }]
                        },
                        "examples": {
                            "0": {
                                "$ref": "../../../errors/mALMediaNotFound.example.json"
                            }
                        }
                    }
                }
            },
            "422": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [{
                                    "$ref": "../../../errors/malformedParameterError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/missingParameterError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/mistypedParameterError.schema.json"
                                }
                            ]
                        },
                        "examples": {
                            "0": {
                                "$ref": "../../../errors/malformedParameterError.example.json"
                            },
                            "1": {
                                "$ref": "../../../errors/missingParameterError.example.json"
                            },
                            "2": {
                                "$ref": "../../../errors/mistypedParameterError.example.json"
                            }
                        }
                    }
                }
            },
            "500": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [{
                                    "$ref": "../../../errors/mALConnectionError.schema.json"
                                },
                                {
                                    "$ref": "../../../errors/generalError.schema.json"
                                }
                            ]
                        },
                        "examples": {
                            "0": {
                                "$ref": "../../../errors/mALConnectionError.example.json"
                            },
                            "1": {
                                "$ref": "../../../errors/generalError.example.json"
                            }
                        }
                    }
                }
            }
        }
    }
}